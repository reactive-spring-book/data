name: API

env:

  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

  KINDLEGEN: /home/runner/bin/kindlegen/kindlegen

  SPRING_PROFILES_ACTIVE: ci

  GH_PAT: ${{ secrets.GH_PAT }}
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}

  PIPELINE_REPO_NAME: ${{ secrets.PIPELINE_REPO_NAME }}
  PIPELINE_ORG_NAME: ${{ secrets.PIPELINE_ORG_NAME }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
      postgres:
        image: postgres:12.4
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: orders
          POSTGRES_USER: orders 
          POSTGRES_PASSWORD: orders 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps: 
      - uses: actions/checkout@v2

      - name : Configure MongoDB
        run: |
          # sudo apt-get -y install libcurl4  
          # sudo apt-get -y install libcurl-openssl1.0-dev
          sudo apt-get -y install curl 
          sleep 3
          which curl 
          cd $GITHUB_WORKSPACE/ci/bin
          ./setup-mongodb.sh


      - name: Configure PostgreSQL  
        run: |
          echo "select 'hello' " | PGPASSWORD=orders psql -U orders -h localhost orders 
          cd $GITHUB_WORKSPACE/ci/bin
          ./setup-postgresql.sh


      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: cd $GITHUB_WORKSPACE/.github/workflows ; ./build.sh

      - name: Initiate Pipeline
        run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" -H "Authorization: token ${GH_PAT}"  --request POST  \
              --data '{"event_type": "update-code-event" }' https://api.github.com/repos/${PIPELINE_ORG_NAME}/${PIPELINE_REPO_NAME}/dispatches
